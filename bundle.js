(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),A=t.n(i),a=t(667),s=t.n(a),c=new URL(t(289),t.b),l=A()(r()),p=s()(c);l.push([n.id,'.mylabel{position:relative;display:block;width:60px;height:30px;margin-bottom:15px;cursor:pointer}.mylabel input{display:none}.slidinggroove{position:absolute;top:0;right:0;bottom:0;left:0;background:#dcd1d8;border-radius:20px;transition:all .3s ease}.slidinggroove:after{position:absolute;content:"";width:28px;height:28px;border-radius:50%;background:#ffcaaf;top:1px;left:1px;transition:all .3s ease}input:checked+.slidinggroove{background:#dcd1d8}input:checked+.slidinggroove:after{transform:translateX(30px)}.labelterm{position:relative;top:5px;margin-left:65px;font-size:16px;color:#222;font-family:"Roboto",sans-serif}.ontext{position:absolute;top:10px;left:7px;font-size:12px;color:#333;font-family:"Roboto",sans-serif}.offtext{position:absolute;top:10px;left:36px;font-size:12px;color:#333;font-family:"Roboto",sans-serif}.weatherInfo{font-size:1rem;position:absolute;top:30vh;left:10vw;padding:3em}.weatherInfo h2{font-size:2.5rem}.weatherInfo h5{font-size:1.25rem;font-style:italic}.weatherInfo h1{margin-bottom:1rem}li{font-size:.85rem;list-style:none;line-height:1.5rem}.propertyName{min-width:125px;display:inline-block}.allInputs{width:100vw;height:10vh}div.mylabel{position:absolute;top:1rem;right:1rem}.formContainer{position:absolute;top:10vh;width:100vw}.formContainer #form{display:flex;gap:1em;justify-content:center}#location{font-size:20px;width:40%;border-radius:8em;padding-left:1em}#location:focus{background-color:#dcd1d8}#location::placeholder{font-weight:20px;font-style:italic}button{width:6em;border-radius:8em;background-color:#afece7}button:hover{cursor:pointer}*{box-sizing:border-box;margin:0;padding:0}body{height:100vh;width:100vw}.imgWrapper{position:relative;height:100vh;width:100vw;background-image:url('+p+');background-repeat:no-repeat;background-size:100vw 100vh}.imgWrapper::before{content:"";position:absolute;top:0px;right:0px;bottom:0px;left:0px;background-color:rgba(255,255,255,.3)}',"",{version:3,sources:["webpack://./src/scss/_slider.scss","webpack://./src/scss/_variables.scss","webpack://./src/scss/_weatherInfo.scss","webpack://./src/scss/_allInputs.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,SACE,iBAAA,CACA,aAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,cAAA,CAGF,eACE,YAAA,CAGF,eACE,iBAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CACA,kBChBgB,CDiBhB,kBAAA,CACA,uBAAA,CAGF,qBACE,iBAAA,CACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,kBC7BY,CD8BZ,OAAA,CACA,QAAA,CACA,uBAAA,CAGF,6BACE,kBClCgB,CDqClB,mCACE,0BAAA,CAGF,WACE,iBAAA,CACA,OAAA,CACA,gBAAA,CACA,cAAA,CACA,UAAA,CACA,+BAAA,CAGF,QACE,iBAAA,CACA,QAAA,CACA,QAAA,CACA,cAAA,CACA,UAAA,CACA,+BAAA,CAGF,SACE,iBAAA,CACA,QAAA,CACA,SAAA,CACA,cAAA,CACA,UAAA,CACA,+BAAA,CEpEF,aACE,cAAA,CACA,iBAAA,CACA,QAAA,CACA,SAAA,CACA,WAAA,CAEA,gBACE,gBAAA,CAEF,gBACE,iBAAA,CACA,iBAAA,CAEF,gBACE,kBAAA,CAIJ,GACE,gBAAA,CACA,eAAA,CACA,kBAAA,CAGF,cACE,eAAA,CACA,oBAAA,CC3BF,WACE,WAAA,CACA,WAAA,CAGF,YACE,iBAAA,CACA,QAAA,CACA,UAAA,CAGF,eACE,iBAAA,CACA,QAAA,CACA,WAAA,CACA,qBACE,YAAA,CACA,OAAA,CACA,sBAAA,CAIJ,UACE,cAAA,CACA,SAAA,CACA,iBAAA,CACA,gBAAA,CACA,gBACE,wBFzBc,CE2BhB,uBACE,gBAAA,CACA,iBAAA,CAIJ,OACE,SAAA,CACA,iBAAA,CACA,wBFvCgB,CEwChB,aACE,cAAA,CCtCJ,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,KACE,YAAA,CACA,WAAA,CAGF,YACE,iBAAA,CACA,YAAA,CACA,WAAA,CACA,wDAAA,CACA,2BAAA,CACA,2BAAA,CACA,oBACE,UAAA,CACA,iBAAA,CACA,OAAA,CACA,SAAA,CACA,UAAA,CACA,QAAA,CACA,qCAAA",sourcesContent:['@import "./variables";\n\n.mylabel {\n  position: relative;\n  display: block;\n  width: 60px;\n  height: 30px;\n  margin-bottom: 15px;\n  cursor: pointer;\n}\n\n.mylabel input {\n  display: none;\n}\n\n.slidinggroove {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: $color-lightPurp;\n  border-radius: 20px;\n  transition: all 0.3s ease;\n}\n\n.slidinggroove:after {\n  position: absolute;\n  content: "";\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  background: $color-peach;\n  top: 1px;\n  left: 1px;\n  transition: all 0.3s ease;\n}\n\ninput:checked + .slidinggroove {\n  background: $color-lightPurp;\n}\n\ninput:checked + .slidinggroove:after {\n  transform: translateX(30px);\n}\n\n.labelterm {\n  position: relative;\n  top: 5px;\n  margin-left: 65px;\n  font-size: 16px;\n  color: #222;\n  font-family: "Roboto", sans-serif;\n}\n\n.ontext {\n  position: absolute;\n  top: 10px;\n  left: 7px;\n  font-size: 12px;\n  color: #333;\n  font-family: "Roboto", sans-serif;\n}\n\n.offtext {\n  position: absolute;\n  top: 10px;\n  left: 36px;\n  font-size: 12px;\n  color: #333333;\n  font-family: "Roboto", sans-serif;\n}\n','$font-color: black;\n$color-darkTeal: #587b7f;\n$color-lightTeak: #afece7;\n$color-peach: #ffcaaf;\n$color-darkPurp: #1c0221;\n$color-lightPurp: #dcd1d8;\n$font-sizes: (\n  "xsmall": 10px,\n  "small": 12px,\n  "large": 20px,\n  "xlarge": 24px,\n);\n\n$font-weights: (\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n$test-border: 1px solid black;\n\n//functions\n@function weight($weight_name) {\n  @return map-get($font-weights, $weight_name);\n}\n//To use this font-weight: weight(bold);\n\n@function size($size-name) {\n  @return map-get($font-sizes, $size-name);\n}\n\n@mixin flexCenter() {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n//to use this: .body { @include flexCenter();}\n','@import "./variables";\n\n.weatherInfo {\n  font-size: 1rem;\n  position: absolute;\n  top: 30vh;\n  left: 10vw;\n  padding: 3em;\n\n  & h2 {\n    font-size: 2.5rem;\n  }\n  & h5 {\n    font-size: 1.25rem;\n    font-style: italic;\n  }\n  & h1 {\n    margin-bottom: 1rem;\n  }\n}\n\nli {\n  font-size: 0.85rem;\n  list-style: none;\n  line-height: 1.5rem;\n}\n\n.propertyName {\n  min-width: 125px;\n  display: inline-block;\n}\n','@import "./variables";\n\n.allInputs {\n  width: 100vw;\n  height: 10vh;\n}\n\ndiv.mylabel {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n}\n\n.formContainer {\n  position: absolute;\n  top: 10vh;\n  width: 100vw;\n  & #form {\n    display: flex;\n    gap: 1em;\n    justify-content: center;\n  }\n}\n\n#location {\n  font-size: size(large);\n  width: 40%;\n  border-radius: 8em;\n  padding-left: 1em;\n  &:focus {\n    background-color: $color-lightPurp;\n  }\n  &::placeholder {\n    font-weight: size(large);\n    font-style: italic;\n  }\n}\n\nbutton {\n  width: 6em;\n  border-radius: 8em;\n  background-color: $color-lightTeak;\n  &:hover {\n    cursor: pointer;\n  }\n}\n','@import "./scss/variables";\n@import "./scss/slider";\n@import "./scss/weatherInfo";\n@import "./scss/allInputs";\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  height: 100vh;\n  width: 100vw;\n}\n\n.imgWrapper {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background-image: url("../src/images/rain.jpg");\n  background-repeat: no-repeat;\n  background-size: 100vw 100vh;\n  &::before {\n    content: "";\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n}\n'],sourceRoot:""}]);const d=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&A[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),A=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(A).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],c=o.base?s[0]+o.base:s[0],l=i[c]||0,p="".concat(c," ").concat(l);i[c]=l+1;var d=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var C=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:p,updater:C,references:1})}A.push(p)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},289:(n,e,t)=>{n.exports=t.p+"3970793e93a2508efdd3.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var o={};(()=>{t.d(o,{D:()=>D});var n=t(379),e=t.n(n),r=t(795),i=t.n(r),A=t(569),a=t.n(A),s=t(565),c=t.n(s),l=t(216),p=t.n(l),d=t(589),u=t.n(d),C=t(192),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),e()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals;class m{constructor(n,e,t,o,r,i){this.city=n,this.weatherDescription=e,this.currentTemp=t,this.maxTemp=o,this.windSpeed=r,this.windDirection=i}}let g="celcius";function h(n){if("celcius"===g){let e=(n-273.15).toFixed(1);return e+="° C",e}if("fahrenheit"===g){let e=(1.8*(n-273.15)+32).toFixed(1);return e+="° F",e}}let b=document.getElementById("city"),v=document.getElementById("weatherDescription"),x=document.getElementById("currentTemp"),y=document.getElementById("windSpeed"),w=document.getElementById("windDirection"),B=document.getElementById("maxTemp");function E(n){var e;b.textContent=n.city,v.textContent=n.weatherDescription,x.textContent=h(n.currentTemp),B.textContent=h(n.maxTemp),y.textContent=`${n.windSpeed} km/hr`,w.textContent=(e=n.windDirection,["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"][Math.floor(e/22.5+.5)%16])}var k=t(289);const I=t.p+"46aa83dcb417035ef034.jpg",$=t.p+"a4bbc5f3f42dd1737c64.jpg",S=t.p+"8f199b931f2594272e71.jpg",z=t.p+"affd0771b22ab0a203ad.jpg",F=t.p+"49ee89774fc94eeba190.jpg",W=k,T=I,j=$,N=S,U=z,R=F;let D=null;async function G(n){try{let e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=eca235609988118b53bb8dd9a90783c4`,{mode:"cors"});e=await e.json(),function(n){const e=document.querySelector(".imgWrapper");n>199&&n<299&&(e.style.backgroundImage=`url(${R})`),n>299&&n<499&&(e.style.backgroundImage=`url(${W})`),n>599&&n<699&&(e.style.backgroundImage=`url(${U})`),n>699&&n<799&&(e.style.backgroundImage=`url(${N})`),n>799&&n<=802&&(e.style.backgroundImage=`url(${T})`),n>802&&(e.style.backgroundImage=`url(${j})`)}(e.weather[0].id);const t=function(n){let e=`${n.name}, ${n.sys.country}`;return new m(e,n.weather[0].description,n.main.temp,n.main.temp_max,n.wind.speed,n.wind.deg)}(e);D=t,E(t)}catch(n){return void console.log(n)}}G("Vancouver"),document.getElementById("form").addEventListener("submit",(n=>{n.preventDefault(),G(new FormData(document.forms.form).get("location"))})),document.getElementById("coding").addEventListener("click",(()=>{g="celcius"===g?"fahrenheit":"celcius",E(D)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,